---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: unittest-custom-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: unit-tests
    ci.w6d.io/package: "custom"
    ci.w6d.io/order: "0"
step:
  name: unit-test
  image: $(params.IMAGE)
  script: |
    cd $(resources.inputs.source.path)
    $(params.script)
---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: unittest-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: unit-tests
    ci.w6d.io/order: "0"
    ci.w6d.io/package: npm
step:
  name: npm-test
  image: "node:latest"
  script: |
    cd $(resources.inputs.source.path)
    npm install
    npm test
---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: build-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: build
    ci.w6d.io/order: "0"
step:
  name: build-and-push
  image: "gcr.io/kaniko-project/executor:latest"
  env:
    - name: DOCKER_CONFIG
      value: "/tekton/home/.docker"
  command:
    - /kaniko/executor
  args:
    - --single-snapshot
    - --snapshotMode=redo
    - --use-new-run
    - $(params.flags[*])
    - --dockerfile=$(params.DOCKERFILE)
    - --destination=$(params.IMAGE)
    - --context=$(workspaces.source.path)/$(params.CONTEXT)
---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: digest-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: build
    ci.w6d.io/order: "1"
step:
  name: digest
  image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.11.1"
  command:
    - /ko-app/imagedigestexporter
  args:
    - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
    - -terminationMessagePath=$(params.CONTEXT)/image-digested

---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: deploy-init-helm-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: deploy
    ci.w6d.io/order: "0"
step:
  name: init-helm
  image: "reg-ext.w6d.io/cxcm/kubectl:v1.1.0"
  script: |
    helm3 repo add cxcm https://reg.w6d.io/chartrepo/cxcm
---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: deploy-get-values-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: deploy
    ci.w6d.io/order: "1"
step:
  name: get-values
  image: "reg-ext.w6d.io/cxcm/s3cmd:latest"
  command:
    - s3cmd
    - get
  args:
    - s3://$(params.s3valuepath)
    - $(params.values)
---
apiVersion: ci.w6d.io/v1alpha1
kind: Step
metadata:
  name: deploy-step-sample
  annotations:
    ci.w6d.io/language: js
    ci.w6d.io/task: deploy
    ci.w6d.io/order: "2"
step:
  name: deploy
  image: "reg-ext.w6d.io/cxcm/kubectl:v1.1.0"
  command: ["helm3"]
  args:
    - "upgrade"
    - "--version"
    - "v0.4.2"
    - "--install"
    - "-f"
    - $(params.values)
    - $(params.flags[*])
    - "--namespace"
    - "$(params.namespace)"
    - "$(params.release_name)"
    - "cxcm/app"
